@model MinhasVendas.App.ViewModels.CarrinhoDeVendasViewModel

@{
    ViewData["Title"] = "Carrinho de Vendas";
}

@{
    if (Model.OrdemDeVendaViewModel.DetalheDeVendas.Any())
    {
        var precoProduto = from item in Model.OrdemDeVendaViewModel.DetalheDeVendas select (item.PrecoUnitario * item.Quantidade * (1 - item.Desconto / 100));
        decimal[] precoProdutos = precoProduto.ToArray();
        decimal totalProdutos = precoProdutos.Aggregate((a, b) => a + b);
        decimal totalVenda = totalProdutos + Model.OrdemDeVendaViewModel.ValorDeFrete;

        var itens = from item in Model.OrdemDeVendaViewModel.DetalheDeVendas select (item.Quantidade);
        int totalItens = itens.Sum();

        Model.TotalItens = totalItens;
        Model.TotalProdutos = totalProdutos;
        Model.TotalVenda = totalVenda;
    }
}


<div id="carrinhodevendaid" class="card-group">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Dados da Venda:</h5>
            <dl class="row">
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.OrdemDeVendaViewModel.DataDeCriacao)
                </dt>
                <dd class="col-sm-5">
                    @Html.DisplayFor(model => model.OrdemDeVendaViewModel.DataDeCriacao)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.OrdemDeVendaViewModel.DataDePagamento)
                </dt>
                <dd class="col-sm-5">
                    @Html.DisplayFor(model => model.OrdemDeVendaViewModel.DataDePagamento)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.OrdemDeVendaViewModel.StatusOrdemDeVenda)
                </dt>
                <dd class="col-sm-5">
                    @Html.DisplayFor(model => model.OrdemDeVendaViewModel.StatusOrdemDeVenda)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.OrdemDeVendaViewModel.Cliente)
                </dt>
                <dd class="col-sm-5">
                    @Html.DisplayFor(model => model.OrdemDeVendaViewModel.Cliente.Nome)
                </dd>
            </dl>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Valores da Compra:</h5>
            <dl class="row">

                <dt class="col-sm-4">
                    Valor Produtos
                </dt>
                <dd class="col-sm-5">
                    @Html.DisplayFor(model => model.TotalProdutos)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.OrdemDeVendaViewModel.ValorDeFrete)
                </dt>
                <dd class="col-sm-5">
                    @Html.DisplayFor(model => model.OrdemDeVendaViewModel.ValorDeFrete)
                </dd>
                <dt class="col-sm-4">
                    Valor da Compra
                </dt>
                <dd class="col-sm-5">
                    @Html.DisplayFor(model => model.TotalVenda)
                </dd>
                <dt class="col-sm-4">
                    Total de Itens
                </dt>
                <dd class="col-sm-5">
                    @Html.DisplayFor(model => model.TotalItens)
                </dd>
            </dl>
        </div>
    </div>
</div>

<br />


<div>
    <div style="float:left">
        <button class="btn btn-info" onclick="InserirProduto(@Model.OrdemDeVendaViewModel.Id)">Inserir Produto</button>
        <button class="btn btn-success" onclick="InserirFrete(@Model.OrdemDeVendaViewModel.Id)">Inserir Frete</button>
        <button class="btn btn-dark" onclick="FinalizarVenda(@Model.OrdemDeVendaViewModel.Id)">Finalizar Compra</button>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.Name("Produto")
            </th>
            <th>
                @Html.Name("Quantidade")
            </th>
            <th>
                @Html.Name("PrecoUnitario")
            </th>
            <th>
                @Html.Name("Desconto")
            </th>
            <th>
                @Html.Name("TotalProduto")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrdemDeVendaViewModel.DetalheDeVendas)
        {
            var produtoTotal = item.Quantidade * item.PrecoUnitario * (1 - (item.Desconto / 100));

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Produto.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantidade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrecoUnitario)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Desconto)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => produtoTotal)
                </td>
                <td>
                    <div style="float:left">
                        <button class="btn btn-danger" onclick="ExcluirProduto(@item.Id)">Excluir Produto</button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>


<a class="btn btn-light" href="javascript:window.history.back();">Voltar</a>

<div class="modal fade" id="modalInserirProduto">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="conteudoModalInserirProduto"> </div>
        </div>
    </div>
</div>


<div class="modal fade" id="ExcluirProdutoFormModel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="ExcluirProdutoFormModelDiv"> </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalInserirFrete">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="conteudoModalInserirFrete"> </div>
        </div>
    </div>
</div>

<div class="modal fade" id="finalizarVendaFormModel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="finalizarVendaFormModelDiv"> </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }

<script>



    var InserirProduto = function (vendaId) {

        var vendaId = vendaId;
        var action = "/DetalheDeVendas/InserirProduto/";
        var url = action + vendaId;

        $("#conteudoModalInserirProduto").load(url, function () {
            $("#modalInserirProduto").modal("show");

            var form = document.getElementById("formularioInserirProduto");
            $.validator.unobtrusive.parse(formularioInserirProduto);
        });

    }



    var ExcluirProduto = function (id) {

        var id = id;
        var action = "/DetalheDeVendas/ExcluirProduto/";
        var url = action + id;

        $("#ExcluirProdutoFormModelDiv").load(url, function () {
            $("#ExcluirProdutoFormModel").modal("show");
        });
    }

    var InserirFrete = function (vendaId) {

        var vendaId = vendaId;
        var action = "/OrdemDeVendas/InserirFrete/";
        var url = action + vendaId;

        $("#conteudoModalInserirFrete").load(url, function () {
            $("#modalInserirFrete").modal("show");

            var form = document.getElementById("formularioInserirFrete");
            $.validator.unobtrusive.parse(formularioInserirFrete);
        });

    }

    var FinalizarVenda = function (vendaId) {

        var vendaId = vendaId;
        var action = "/OrdemDeVendas/FinalizarVenda/";
        var url = action + vendaId;

        $("#finalizarVendaFormModelDiv").load(url, function () {
            $("#finalizarVendaFormModel").modal("show");

            var form = document.getElementById("finalizarVendaForm");
            $.validator.unobtrusive.parse(form);
        });

    }
</script>




