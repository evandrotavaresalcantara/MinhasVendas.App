@model Vendas.ViewModels.CarrinhoDeVendasViewModel

@{
    Layout = "_Layout";

    ViewData["Title"] = "Vendas";

    ViewData["Rota"] = "Vendas";
    ViewData["Acao"] = "Carrinho de Vendas";
    ViewData["Rotulo"] = "Carrinho de Vendas";
}

@{
    if (Model.OrdemDeVendaViewModel.DetalheDeVendas.Any())
    {
        var precoProduto = from item in Model.OrdemDeVendaViewModel.DetalheDeVendas select (item.PrecoUnitario * item.Quantidade * (1 - item.Desconto / 100));
        decimal[] precoProdutos = precoProduto.ToArray();
        decimal totalProdutos = precoProdutos.Aggregate((a, b) => a + b);
        decimal totalVenda = totalProdutos + Model.OrdemDeVendaViewModel.ValorDeFrete;

        var itens = from item in Model.OrdemDeVendaViewModel.DetalheDeVendas select (item.Quantidade);
        int totalItens = itens.Sum();

        Model.TotalItens = totalItens;
        Model.TotalProdutos = totalProdutos;
        Model.TotalVenda = totalVenda;
    }
}


<vc:resumo></vc:resumo>

<div class="container-fluid py-4">
    <div class="card-group">
        <div class="card mx-1 rounded ">
            <div class="card-body">
                <div class="row">
                    <div class="col-8">
                        <h6 class="card-title">Dados</h6>
                    </div>
                    <div class="col-4 text-end">
                        <div class="icon icon-shape bg-gradient-success shadow-success text-center rounded-circle">
                            <i class="ni ni-paper-diploma text-lg opacity-10" aria-hidden="true"></i>
                        </div>
                    </div>
                </div>
                <dl class="row">
                    <dt class="col-md-6 col-sm-12">
                        @Html.DisplayNameFor(model => model.OrdemDeVendaViewModel.DataDeCriacao)
                    </dt>
                    <dd class="col-md-6 col-sm-12">
                        @Html.DisplayFor(model => model.OrdemDeVendaViewModel.DataDeCriacao)
                    </dd>
                    <dt class="col-md-6 col-sm-12">
                        @Html.DisplayNameFor(model => model.OrdemDeVendaViewModel.DataDePagamento)
                    </dt>
                    <dd class="col-md-6 col-sm-12">
                        @Html.DisplayFor(model => model.OrdemDeVendaViewModel.DataDePagamento)
                    </dd>
                    <dt class="col-md-6 col-sm-12">
                        @Html.DisplayNameFor(model => model.OrdemDeVendaViewModel.StatusOrdemDeVenda)
                    </dt>
                    <dd class="col-md-6 col-sm-12">
                        @Html.DisplayFor(model => model.OrdemDeVendaViewModel.StatusOrdemDeVenda)
                    </dd>
                    <dt class="col-md-6 col-sm-12">
                        @Html.DisplayNameFor(model => model.OrdemDeVendaViewModel.Cliente)
                    </dt>
                    <dd class="col-md-6 col-sm-12">
                        @Html.DisplayFor(model => model.OrdemDeVendaViewModel.Cliente.Nome)
                    </dd>
                </dl>
            </div>
        </div>
        <div class="card mx-1 rounded">
            <div class="card-body">
                <div class="row">
                    <div class="col-8">
                        <h6 class="card-title">Valores</h6>
                    </div>
                    <div class="col-4 text-end">
                        <div class="icon icon-shape bg-gradient-primary shadow-primary text-center rounded-circle">
                            <i class="ni ni-money-coins text-lg opacity-10" aria-hidden="true"></i>
                        </div>
                    </div>
                </div>
                <dl class="row">
                    <dt class="col-md-6 col-sm-12">
                        Valor Produtos
                    </dt>
                    <dd class="col-md-6 col-sm-12">
                        @Html.DisplayFor(model => model.TotalProdutos)
                    </dd>
                    <dt class="col-md-6 col-sm-12">
                        @Html.DisplayNameFor(model => model.OrdemDeVendaViewModel.ValorDeFrete)
                    </dt>
                    <dd class="col-md-6 col-sm-12">
                        @Html.DisplayFor(model => model.OrdemDeVendaViewModel.ValorDeFrete)
                    </dd>
                    <dt class="col-md-6 col-sm-12">
                        Valor da Compra
                    </dt>
                    <dd class="col-md-6 col-sm-12">
                        @Html.DisplayFor(model => model.TotalVenda)
                    </dd>
                    <dt class="col-md-6 col-sm-12">
                        Total de Itens
                    </dt>
                    <dd class="col-md-6 col-sm-12">
                        @Html.DisplayFor(model => model.TotalItens)
                    </dd>

                </dl>
            </div>
        </div>
    </div>
</div>


<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div style="float:left">
                <button class="btn btn-info" onclick="InserirProduto(@Model.OrdemDeVendaViewModel.Id)">Inserir Produto</button>
                <button class="btn btn-success" onclick="InserirFrete(@Model.OrdemDeVendaViewModel.Id)">Inserir Frete</button>
                <button class="btn btn-dark" onclick="FinalizarVenda(@Model.OrdemDeVendaViewModel.Id)">Finalizar Compra</button>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="table-responsive">
                    <table class="table table-flush" id="datatable-search">
                        <thead class="thead-light">
                            <tr>
                                <th>
                                    @Html.Name("Produto")
                                </th>
                                <th>
                                    @Html.Name("Quantidade")
                                </th>
                                <th>
                                    @Html.Name("PrecoUnitario")
                                </th>
                                <th>
                                    @Html.Name("Desconto")
                                </th>
                                <th>
                                    @Html.Name("TotalProduto")
                                </th>
                                <th>
                                    Ação
                                </th>
                            </tr>

                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrdemDeVendaViewModel.DetalheDeVendas)
                            {
                                var produtoTotal = item.Quantidade * item.PrecoUnitario * (1 - (item.Desconto / 100));

                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <p class="text-xs font-weight-bold ms-2 mb-0">   @Html.DisplayFor(modelItem => item.Produto.Nome)</p>
                                        </div>
                                    </td>
                                    <td class="font-weight-bold">
                                        <span class="my-2 text-xs"> @Html.DisplayFor(modelItem => item.Quantidade)</span>
                                    </td>
                                    <td class="text-xs font-weight-bold">
                                        @Html.DisplayFor(modelItem => item.PrecoUnitario)
                                    </td>
                                    <td class="text-xs font-weight-bold">
                                        @Html.DisplayFor(modelItem => item.Desconto)
                                    </td>
                                    <td class="text-xs font-weight-bold">
                                        <span class="my-2 text-xs"> @Html.DisplayFor(modelItem => produtoTotal)</span>
                                    </td>
                                    <td class="text-sm">
                                        <a class="mx-3" href="#" title="Excluir Produto" onclick="ExcluirProduto(@item.Id)">
                                            <i class="fas fa-trash text-secondary"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-12">
            <div style="float:left">
                <a class="btn btn-light" href="javascript:window.history.back();">Voltar</a>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="modalInserirProduto">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="conteudoModalInserirProduto"> </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ExcluirProdutoFormModel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="ExcluirProdutoFormModelDiv"> </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalInserirFrete">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="conteudoModalInserirFrete"> </div>
        </div>
    </div>
</div>

<div class="modal fade" id="finalizarVendaFormModel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="finalizarVendaFormModelDiv"> </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>

      

    </script>
}

<script>


</script>

<script>

    var InserirProduto = function (vendaId) {

        var vendaId = vendaId;
        var action = "/DetalheDeVendas/InserirProduto/";
        var url = action + vendaId;

        $("#conteudoModalInserirProduto").load(url, function () {
            $.ajax({
                url: "/DetalheDeVendas/ObterProdutosVenda",
                type: "GET",
                success: function (data) {
                    $("#produto").autocomplete({
                        source: data,
                        select: function (event, ui) {
                            $("#produtoId").val(ui.item.value);
                            $("#produto").val(ui.item.nome);
                            return false;
                        }
                    });
                }
            });
            $("#modalInserirProduto").modal("show");

            var form = document.getElementById("formularioInserirProduto");
            $.validator.unobtrusive.parse(formularioInserirProduto);
        });
    }



    var ExcluirProduto = function (id) {

        var id = id;
        var action = "/DetalheDeVendas/ExcluirProduto/";
        var url = action + id;

        $("#ExcluirProdutoFormModelDiv").load(url, function () {
            $("#ExcluirProdutoFormModel").modal("show");
        });
    }

    var InserirFrete = function (vendaId) {

        var vendaId = vendaId;
        var action = "/OrdemDeVendas/InserirFrete/";
        var url = action + vendaId;

        $("#conteudoModalInserirFrete").load(url, function () {
            $("#modalInserirFrete").modal("show");

            var form = document.getElementById("formularioInserirFrete");
            $.validator.unobtrusive.parse(formularioInserirFrete);
        });

    }

    var FinalizarVenda = function (vendaId) {

        var vendaId = vendaId;
        var action = "/OrdemDeVendas/FinalizarVenda/";
        var url = action + vendaId;

        $("#finalizarVendaFormModelDiv").load(url, function () {
            $("#finalizarVendaFormModel").modal("show");

            var form = document.getElementById("finalizarVendaForm");
            $.validator.unobtrusive.parse(form);
        });

    }

</script>